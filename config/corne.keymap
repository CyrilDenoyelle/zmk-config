/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&lt { tapping-term-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        gamingtoggle {
            bindings = <&tog 5>;
            key-positions = <25 26 27>;
            layers = <0 5>;
            require-prior-idle-ms = <0>;
        };

        profil0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <32 33>;
            layers = <1>;
        };

        profil1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <34 33>;
            layers = <1>;
        };

        resetprofile {
            bindings = <&bt BT_CLR>;
            key-positions = <35 23>;
            layers = <1>;
        };

        profil2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <34 35>;
            layers = <1>;
        };

        ext_pow {
            bindings = <&ext_power EP_TOG>;
            key-positions = <24 25 26>;
            timeout-ms = <0>;
            layers = <1>;
        };
    };

    macros {
        back_quote: back_cote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N7) &kp SPACE>;
            label = "BACK_COTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &lt 2 T      &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &lt 3 G      &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &lt 4 B      &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp DELETE
                              &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 7  &kp RALT
            >;
        };

        topbar {
            bindings = <
&kp ESC  &kp N1                    &kp N2     &kp N3         &kp N4         &kp N5         &kp N6  &kp N7  &kp N8  &kp N9  &kp N0      &trans
&trans   &kp NON_US_BACKSLASH      &kp N5     &kp RA(N5)     &kp RA(N4)     &kp EQUAL      &trans  &trans  &trans  &trans  &kp LBKT    &kp RBKT
&trans   &kp LS(NON_US_BACKSLASH)  &kp MINUS  &kp RA(MINUS)  &kp RA(EQUAL)  &back_quote    &trans  &trans  &trans  &trans  &bt BT_PRV  &bt BT_NXT
                                              &kp LGUI       &trans         &kp RET        &trans  &trans  &trans
            >;
        };

        left_hand_func {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans          &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT       &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans             &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans             &trans           &trans    &trans  &trans  &trans
            >;
        };

        inverted {
            bindings = <
&kp BSPC  &kp Y  &kp U  &kp I      &kp O       &kp P       &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp H  &kp J  &kp K      &kp L       &kp SEMI    &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp N  &kp M  &kp COMMA  &kp DELETE  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                        &trans     &trans      &trans      &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        gaming_topbar {
            bindings = <
&trans  &kp N1  &kp W  &kp N3        &kp N4  &kp I        &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp PAUSE_BREAK
&trans  &kp A   &kp S  &kp D         &kp N2  &kp J        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N5  &kp P  &kp N         &kp M   &kp COMMA    &trans  &trans  &trans  &trans  &trans  &trans
                       &kp LEFT_WIN  &trans  &trans       &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &kp KP_NUM       &kp HOME   &kp UP           &kp END    &kp KP_SUBTRACT  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &kp KP_NUMBER_0  &kp LEFT   &kp KP_NUMBER_5  &kp RIGHT  &kp KP_PLUS      &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &kp F11  &kp F12    &kp BSPC         &kp PG_UP  &kp DOWN         &kp PG_DN  &kp KP_DIVIDE    &kp KP_DOT
                        &trans  &mo 8    &trans     &kp SPACE        &trans     &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUM       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp BSPC         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DIVIDE    &kp KP_DOT
                        &trans  &trans  &trans    &trans           &trans           &studio_unlock
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        gamingmode {
            if-layers = <1 5>;
            then-layer = <6>;
        };
    };
};
